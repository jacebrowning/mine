[tool.poetry]

name = "mine"
version = "4.0a2"
description = "Share application state across computers using Dropbox."

license = "MIT"

authors = ["Jace Browning <jacebrowning@gmail.com>"]

readme = "README.md"

homepage = "https://pypi.org/project/mine"
documentation = "https://mine.readthedocs.io"
repository = "https://github.com/jacebrowning/mine"

keywords = [
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: System",
    "Topic :: System :: Monitoring",
    "Topic :: Utilities",
]

[tool.poetry.dependencies]

python = "^3.10"

datafiles = "^2.1"
psutil = "~5.6"
crayons = "~0.1"
minilog = "^2.1"
universal-startfile = "^0.2"

[tool.poetry.dev-dependencies]

# Formatters
black = "^23.7"
isort = "^5.12"

# Linters
mypy = "^1.4"
pydocstyle = "^6.1"
pylint = "~2.15"
wrapt = "*" # missing 'pylint' dependency
types-setuptools = "*"

# Testing
pytest = "^7.1"
pytest-describe = "^2.0"
pytest-expecter = "^3.0"
pytest-random = "*"
pytest-cov = "^4.0"
freezegun = "*"

# Reports
coveragespace = "^6.0"

# Documentation
mkdocs = "^1.4"
pygments = "^2.11"

# Tooling
pyinstaller = "*"
sniffer = "*"
MacFSEvents = { version = "*", platform = "darwin" }
pync = { version = "*", platform = "darwin" }
ipython = "^8.10.0"

[tool.poetry.scripts]

mine = "mine.cli:main"

[tool.black]

quiet = true

[tool.isort]

profile = "black"

[tool.mypy]

ignore_missing_imports = true
no_implicit_optional = true
check_untyped_defs = true

cache_dir = ".cache/mypy/"

plugins = "datafiles.plugins:mypy"

[tool.pytest.ini_options]

addopts = """
--strict-markers

-r sxX
--show-capture=log

--cov-report=html
--cov-report=term-missing:skip-covered
--no-cov-on-fail
"""

cache_dir = ".cache/pytest/"

markers = ["linux_only", "mac_only", "windows_only"]

[build-system]

requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
